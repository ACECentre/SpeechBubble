include ../../app/mixins/results-helpers
include ../../app/mixins/form-helpers
include ../../app/admin/products/form-helpers

div.product-filters
  form(ng-submit='performSearch()', name='searchForm')
    div.product-advanced-type
      .form-group
        label.control-label(for="type") Product type
        +radioChange('search', 'type', '', 'All', 'clearSearchRetainType()')
        +radioChange('search', 'type', 'ProductLowTech', 'Low-tech', 'clearSearchRetainType()')
        +radioChange('search', 'type', 'ProductHardware', 'Hardware', 'clearSearchRetainType()')
        +radioChange('search', 'type', 'ProductAccessSolution', 'Access Solutions', 'clearSearchRetainType()')
        +radioChange('search', 'type', 'ProductSoftware', 'Software / Application', 'clearSearchRetainType()')
        +radioChange('search', 'type', 'ProductVocabulary', 'Vocabulary', 'clearSearchRetainType()')

    div.product-advanced-filters
      .form-group(ng-if='search.type && search.type !== "ProductLowTech"')
        label.control-label(for="type") Operating systems
        ui-select(multiple, search-enabled, reset-search-input='true', ng-model="search.devices")
          ui-select-match(placeholder="Select operating systems") {{$item}}
          ui-select-choices(repeat="item in devices | filter: $select.search")
            div {{ item }}

      <!-- Hardware Only -->
      .form-group(ng-if='search.type && search.type === "ProductHardware"')
        label.control-label(for="type") Minimum Battery Life
          div(ng-class='{ "has-error": searchForm.searchBatteryLife.$invalid }')
            input.form-control(id='searchBatteryLife', name='searchBatteryLife', type='number', ng-model='search.batteryLife')

            p.help-block(ng-show='searchForm.searchBatteryLife.$error.number')
              | #{label} Please enter a number

      <!-- Hardware Only -->
      .form-group(ng-if='search.type && search.type === "ProductHardware"')
        label.control-label(for="screenSize") Minimum Screen Size
          div(ng-class='{ "has-error": searchForm.searchScreenSize.$invalid }')
            input.form-control(id='searchScreenSize', name='searchScreenSize', type='number', ng-model='search.screenSize')

            p.help-block(ng-show='searchForm.searchScreenSize.$error.number')
              | #{label} Please enter a number

      <!-- Hardware Only -->
      .form-group(ng-if='search.type && search.type === "ProductHardware"')
        label.control-label(for="mobilePhoneCapabilities") Mobile phone capabilities
        +checkbox('search.facets', 'mobile-phone-sim', 'In-built SIM')
        +checkbox('search.facets', 'mobile-phone-required', 'Phone required')


      <!-- Vocabulary Only -->
      .form-group(ng-if='search.type && search.type === "ProductVocabulary"')
        label.control-label Form of representation
        +checkbox('search.presentation', 'textOnly', 'Text only')
        +checkbox('search.presentation', 'textAndSymbolsOrPhotos', 'Text & Symbols or Photos')
        +checkbox('search.presentation', 'symbolsOrPhotos', 'Symbols or Photos Only')
        +checkbox('search.presentation', 'visualScenes', 'Visual Scenes')

      <!-- Software Only -->
      .form-group(ng-if='search.type && search.type === "ProductSoftware"')
        label.control-label Form of representation
        +checkbox('search.imageRepresentation', 'photos', 'Photos')
        +checkbox('search.imageRepresentation', 'symbols', 'Symbols')
        +checkbox('search.imageRepresentation', 'videos', 'Videos')

      .form-group(ng-if='search.type && search.type === "ProductSoftware"')
        label.control-label Speech Type Options
        +checkbox('search.speechTypeOptions', 'synthesised', 'Synthesised')
        +checkbox('search.speechTypeOptions', 'recorded', 'Recorded')


      <!-- Except Low Tech -->
      .form-group(ng-if='search.type && search.type !== "ProductLowTech"')
        label.control-label(for="type") Access Methods
          +checkbox('search.accessMethods', 'touch', 'Touch')
          +checkbox('search.accessMethods', 'mouseOrAlternative', 'Mouse or Mouse alternative')
          +checkbox('search.accessMethods', 'eyegaze', 'Eyegaze')
          +checkbox('search.accessMethods', 'switch', 'Switch')

      <!-- Admin -->
      .form-group(ng-if='isAdmin()')
        label.control-label Admin
          +checkbox('search', 'awaitingModeration', 'Awaiting Moderation')

    div.product-advanced-actions
      a.btn.btn-tertiary(ng-click='clearSearchFilters()') Clear
