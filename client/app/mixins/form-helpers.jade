mixin input(form, model, type, id, required)
  if required
    .form-group(ng-class='{ "has-success": #{form}.#{id}.$valid && #{form}.$submitted,\
    "has-error": #{form}.#{id}.$invalid && #{form}.$submitted }')
      label.control-label.col-sm-2(for="#{id}") #{id}
      .col-sm-10
        input.form-control(id='#{id}', name='#{id}', type='#{type}', ng-model='#{model}.#{id}', required)
        p.help-block(ng-show='#{form}.#{id}.$error.required && #{form}.$submitted')
          | #{id} is required
  else
    .form-group
      label.control-label.col-sm-2(for="#{id}") #{id}
      .col-sm-10
        input.form-control(id='#{id}', name='#{id}', type='text', ng-model='#{model}.#{id}')

mixin textarea(form, model, type, id, required)
  if required
    .form-group(ng-class='{ "has-success": #{form}.#{id}.$valid && #{form}.$submitted,\
    "has-error": #{form}.#{id}.$invalid && #{form}.$submitted }')
      label.control-label.col-sm-2(for="#{id}") #{id}
      .col-sm-10
        textarea.form-control(id='#{id}', name='#{id}', type='#{type}', ng-model='#{model}.#{id}', required)
        p.help-block(ng-show='#{form}.#{id}.$error.required && #{form}.$submitted')
          | #{id} is required
  else
    .form-group
      label.control-label.col-sm-2(for="#{id}") #{id}
      .col-sm-10
        textarea.form-control(id='#{id}', name='#{id}', type='text', ng-model='#{model}.#{id}')



mixin radio(model, id, value, label)
  div.radio
    label 
      input(type='radio', ng-model='#{model}.#{id}', name='#{id}', value='#{value}')
      | #{label}
      
mixin checkbox(model, id, label)
  div.checkbox
    label
      input(type='checkbox', name='#{id}', ng-model='#{model}.#{id}')
      | #{label}

mixin switch(model, id)
  input(type='checkbox', name='#{id}', ng-model='#{model}.#{id}', bs-switch='', switch-off-text='No', switch-on-text='Yes')

mixin accessMethodOptions(dependsOn)
  .panel.panel-default(ng-if='product.features.#{dependsOn}', destroy='#{dependsOn}KeyguardsAvailable')
    .panel-heading Are specially designed keyguards available?
    .panel-body
      +switch('product.features', dependsOn + 'KeyguardsAvailable')
      
  .panel.panel-default(ng-if='product.features.#{dependsOn}', destroy='#{dependsOn}MinimumTarget')
    .panel-heading Is there a minimum target size?
    .panel-body
      +switch('product.features', dependsOn + 'MinimumTarget')
      
      .panel.panel-default(ng-if='product.features.#{dependsOn} && product.features.#{dependsOn}MinimumTarget', destroy='#{dependsOn}MinimumTargetSize')
        .panel-heading What is this size? (mm)
        .panel-body
          div(ng-class='{ "has-success": form.#{dependsOn}MinimumTargetSize.$valid && form.$submitted,\
          "has-error": form.#{dependsOn}MinimumTargetSize.$invalid && form.$submitted }')
            input.form-control(id='#{dependsOn}MinimumTargetSize', name='#{dependsOn}MinimumTargetSize', type='number', ng-model='product.features.#{dependsOn}MinimumTargetSize', required)
            p.help-block(ng-show='form.#{dependsOn}MinimumTargetSize.$error.required && form.$submitted')
                | Minimum target size is required
            
            
  .panel.panel-default(ng-if='product.features.#{dependsOn}', destroy='#{dependsOn}MaximumLocations')
    .panel-heading What is the maximum number of locations per page?
    .panel-body
      input(type='number', ng-model='product.features.#{dependsOn}MaximumLocations')
        
  .panel.panel-default(ng-if='product.features.#{dependsOn}', destroy='#{dependsOn}Options')
    .panel-heading What scanning options are available (without additional software)
    .panel-body
      +checkbox('product.features', dependsOn + 'Options.crosshair', 'Crosshair')
      +checkbox('product.features', dependsOn + 'Options.columnRow', 'Column Row')
      +checkbox('product.features', dependsOn + 'Options.rowColumn', 'Row Column')
      +checkbox('product.features', dependsOn + 'Options.block', 'Block')
      +checkbox('product.features', dependsOn + 'Options.quartered', 'Quartered')
      +checkbox('product.features', dependsOn + 'Options.morse', 'Morse')
      
